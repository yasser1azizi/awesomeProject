name: CI Pipeline with Security Tools

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-scan:
    runs-on: ubuntu-22.04

    steps:
      # 1. Install tar utility
      - name: Install tar
        run: sudo apt-get update && sudo apt-get install -y tar

      # 2. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 3. Install Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # 4. Run Semgrep
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/r2c-ci"

      # 5. Run GoSec
      - name: Run GoSec
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $GITHUB_WORKSPACE
          ./gosec ./...

      # 6. Start SonarQube using Docker
      - name: Start SonarQube
        run: |
          docker run -d --name sonarqube -p 9000:9000 \
          -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true sonarqube:community

      # 7. Wait for SonarQube to Be Ready
      - name: Wait for SonarQube to Start
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:9000/api/system/health | grep -q '"status":"UP"'; then
              echo "SonarQube is ready";
              break;
            fi;
            echo "Waiting for SonarQube...";
            sleep 15;
          done

      # 8. Display SonarQube Logs (Optional Debug Step)
      - name: Display SonarQube Logs
        run: docker logs sonarqube
        
      # 9. Install SonarQube Scanner
      - name: Install SonarQube Scanner
        run: |
          curl -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "PATH=$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH" >> $GITHUB_ENV

     # Run SonarQube Analysis with Debug
     # - name: Run SonarQube Analysis
       # run: |
         #sonar-scanner -X \
          # -Dsonar.projectKey=my-project \
         #  -Dsonar.sources=. \
       #    -Dsonar.host.url=http://localhost:9000 \
        #   -Dsonar.login=${{ secrets.SONAR_TOKEN }}