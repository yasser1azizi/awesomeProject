name: CI Pipeline with Security Tools

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-scan:
    runs-on: ubuntu-22.04

    steps:
      # 1. Install tar utility
      - name: Install tar
        run: sudo apt-get update && sudo apt-get install -y tar

      # 2. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 3. Install Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # 4. Install Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20' # Adjust the version based on your project requirements

      - name: Verify Go Installation
        run: go version

      # 5. Run Semgrep
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/r2c-ci"

      # 6. Run GoSec
      - name: Run GoSec
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $GITHUB_WORKSPACE
          ./gosec ./...

      # 7. Start SonarQube using Docker
      - name: Start SonarQube
        run: |
          docker run -d --name sonarqube -p 9000:9000 \
          -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true sonarqube:community

      # 8. Wait for SonarQube to Be Ready
      - name: Wait for SonarQube to Start
        run: |
          for i in {1..2}; do
            if curl -s http://localhost:9000/api/system/health | grep -q '"status":"UP"'; then
              echo "SonarQube is ready";
              break;
            fi;
            echo "Waiting for SonarQube...";
            sleep 5;
          done

      # 9. Display SonarQube Logs (Optional Debug Step)
      - name: Display SonarQube Logs
        run: docker logs sonarqube

      # 10. Install SonarQube Scanner
      - name: Install SonarQube Scanner
        run: |
          curl -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "PATH=$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH" >> $GITHUB_ENV

      # 11. Run SonarQube Analysis
    #  - name: Run SonarQube Analysis
     #   run: |
      #    sonar-scanner \
       #     -Dsonar.projectKey=my-project \
        #    -Dsonar.sources=. \
         #   -Dsonar.host.url=http://localhost:9000 \
          #  -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # 12. Run Snyk for Vulnerability Scanning
      - name: Run Snyk to Check for Vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high