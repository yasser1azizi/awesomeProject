name: CI Pipeline with Security Tools

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-scan:
    runs-on: ubuntu-22.04

    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Run Semgrep
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/r2c-ci"

      # Run GoSec
      - name: Run GoSec
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $GITHUB_WORKSPACE
          ./gosec ./...

      # Start SonarQube using Docker
      - name: Start SonarQube
        run: |
          docker run -d --name sonarqube -p 9000:9000 \
          -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true sonarqube:community

      # Wait for SonarQube to Be Ready
      - name: Wait for SonarQube to Start
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:9000/api/system/health | grep -q '"status":"UP"'; then
              echo "SonarQube is ready";
              break;
            fi;
            echo "Waiting for SonarQube...";
            sleep 15;
          done

      # Install SonarQube Scanner
      - name: Install SonarQube Scanner
        run: |
          curl -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "PATH=$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH" >> $GITHUB_ENV

      # Run SonarQube Analysis
      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my-project \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

            ########################